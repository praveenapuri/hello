##########################################
# (Optional) Pin provider for consistency
##########################################
terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = ">= 5.0"
    }
  }
}

##########################################
# Input: your target EC2 instance IDs
##########################################
variable "instance_ids" {
  type        = list(string)
  description = "EC2 instance IDs whose attached EBS volumes you want to inspect"
  default     = [
    "i-0123456789abcdef0",
    "i-0fedcba9876543210"
  ]
}

##########################################
# Read each instance to get its block devices
##########################################
data "aws_instance" "selected" {
  for_each    = toset(var.instance_ids)
  instance_id = each.value
}

##########################################
# Collect volume attachments (root + additional EBS)
# NOTE: We rely on instance block-device mappings (not 'attachments')
##########################################
locals {
  attached = flatten([
    for inst in data.aws_instance.selected :
    concat(
      # Root volume(s)
      [
        for rb in try(inst.root_block_device, []) : {
          instance_id = inst.id
          device      = try(rb.device_name, "/dev/xvda")
          volume_id   = rb.volume_id
        }
      ],
      # Additional EBS volumes defined for the instance
      [
        for eb in try(inst.ebs_block_device, []) : {
          instance_id = inst.id
          device      = eb.device_name
          volume_id   = eb.volume_id
        }
      ]
    )
  ])

  volume_ids = toset([for a in local.attached : a.volume_id])
}

##########################################
# Look up each volume's details (by volume-id filter)
##########################################
data "aws_ebs_volume" "by_id" {
  for_each = local.volume_ids

  filter {
    name   = "volume-id"
    values = [each.value]
  }
}

##########################################
# Output: one row per attachment with supported attributes
##########################################
output "ebs_volume_details" {
  value = [
    for a in local.attached : {
      instance_id         = a.instance_id
      device              = a.device
      volume_id           = a.volume_id

      # Supported attributes on aws_ebs_volume data source
      size_gib            = data.aws_ebs_volume.by_id[a.volume_id].size
      volume_type         = data.aws_ebs_volume.by_id[a.volume_id].type
      iops                = try(data.aws_ebs_volume.by_id[a.volume_id].iops, null)
      throughput_mb       = try(data.aws_ebs_volume.by_id[a.volume_id].throughput, null)
      availability_zone   = data.aws_ebs_volume.by_id[a.volume_id].availability_zone
      encrypted           = data.aws_ebs_volume.by_id[a.volume_id].encrypted
      multi_attach        = try(data.aws_ebs_volume.by_id[a.volume_id].multi_attach_enabled, null)
      kms_key_id          = try(data.aws_ebs_volume.by_id[a.volume_id].kms_key_id, null)
      name                = try(data.aws_ebs_volume.by_id[a.volume_id].tags["Name"], null)
      tags                = try(data.aws_ebs_volume.by_id[a.volume_id].tags, null)
    }
  ]
}
