# -----------------------------------------------------------------------------
# locals.tf
# -----------------------------------------------------------------------------
# This file processes the raw data from the JSON file into a format that
# is easy to use in our resource definitions.
# -----------------------------------------------------------------------------

locals {
  # 1. Load the raw data from the JSON file.
  # Ensure you have a 'dns_records.json' file in the same directory.
  dns_data = jsondecode(file("${path.module}/dns_records.json"))

  # 2. Convert the lists of records into maps, keyed by the record name.
  # This is necessary for using for_each and for easily overriding records.
  prod_cname_map = { for entry in local.dns_data.prod_cname_dns_entries : entry.name => entry }
  prod_a_map     = { for entry in local.dns_data.prod_a_dns_entries : entry.name => entry }
  dr_a_map       = { for entry in local.dns_data.dr_a_dns_entries : entry.name => entry }
  ns_map         = { for entry in local.dns_data.prod_ns_dns_entries : entry.name => entry }
  soa_map        = { for entry in local.dns_data.prod_soa_dns_entries : entry.name => entry }

  # 3. Create the final map for A records.
  # Start with the production records. If the DR flag is true, merge the DR
  # records, which will automatically overwrite any matching production entries.
  final_a_records = var.is_dr_active ? merge(local.prod_a_map, local.dr_a_map) : local.prod_a_map
}
