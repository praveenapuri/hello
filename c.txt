
In today's world, Health service customers are having their pipelines hosted on Jenkins which is serviced by a backend Rancher Kubernetes cluster.  To provide a small glimpse into how this works, essentially a pipeline is made up of many stages potentially.  Whereas a stage may perform some type of activity, like build your application, scan your code, lint your code, execute a functional test, etc... In order to execute all these stages, Jenkins will spin up a Docker container for each stage (sometimes multiple containers are used for a single stage as well known as side-carring).  The containers that are spun up are hosted on a Kubernetes (k8s) platform.  This is where the Rancher product comes into play.  Rancher is where all current Health services pipelines ultimately run.  While users may think their pipelines are actually running in Jenkins on their CBC (Cloudbees core) instance, in fact, Jenkins is just a pipeline orchestration tool.  The actual execution of the tasks within your pipeline is executing on the backend k8s cluster within dedicated containers. 

Within that Health services Jenkins instance, customers are also taking advantage of either a Legacy/traditional pipeline library or a CNP library in some cases (if you've already migrated from PCF to Openshift).  This library is responsible for doing all the heavy lifting within a customer's pipeline execution.  For example, if the customer needed to do a Java build for their application. If they were not using a library, they would have to hand code the entire logic to compile the code, publish the build artifacts to some type of binary storage repository, etc... However, with the use of a library such as traditional or CNP, this logic is abstracted from the customer, and the customer can solely focus on developing their application.  

It should now be noted that CNP was the strategic library that all health service customers should have leveraged.  Actually, within the PCF to Openshift migration guide, customers were required to utilize CNP.  Unfortunately, due to the way, CNP was originally constructed which was fully dependent upon the way the health services Jenkins instance was set up, CNP would simply not run on the new Cloudbees Core v2 Jenkins instance.  Likewise, Enterprise DevOps was faced with an issue in that they had two competing pipeline libraries.  On one hand, we had health services CNP, and on the other hand, we had the US Medical Strategic Library which was known as Conduit.  Knowing that having two libraries is unsustainable, the decision was made to take the best of both libraries and create one reliable, robust, and future-proof library all customers could leverage.  At the same time, this new library would also be made to easily run on the new Cloudbees Core v2 platform, thereby enhancing all of our customer's lives by allowing them to take full advantage of not only our stable and performant Cloudbees instance but also a fully strategic new pipeline library.
