# main.tf

resource "aws_cloudwatch_dashboard" "consolidated_health_dashboard" {
  dashboard_name = "Consolidated-AWS-Health-Dashboard"

  dashboard_body = jsonencode({
    widgets = [
      # 1. EC2 Health Window
      {
        type   = "explorer",
        x      = 0,
        y      = 0,
        width  = 24,
        height = 7,
        properties = {
          title = "EC2 Instance Health (CPU Utilization)",
          # Corrected metrics structure
          metrics = [
            {
              metricName   = "CPUUtilization",
              resourceType = "CLOUDWATCH_METRIC",
              search       = "SEARCH('{AWS/EC2,InstanceId} MetricName=\"CPUUtilization\"', 'Average', 300)"
            }
          ]
        }
      },
      # 2. Lambda Health Window
      {
        type   = "explorer",
        x      = 0,
        y      = 7,
        width  = 24,
        height = 7,
        properties = {
          title = "Lambda Function Health (Errors)",
          # Corrected metrics structure
          metrics = [
            {
              metricName   = "Errors",
              resourceType = "CLOUDWATCH_METRIC",
              search       = "SEARCH('{AWS/Lambda,FunctionName} MetricName=\"Errors\"', 'Sum', 300)"
            }
          ]
        }
      },
      # 3. EBS Health Window
      {
        type   = "explorer",
        x      = 0,
        y      = 14,
        width  = 24,
        height = 7,
        properties = {
          title = "EBS Volume Health (VolumeQueueLength)",
          # Corrected metrics structure
          metrics = [
            {
              metricName   = "VolumeQueueLength",
              resourceType = "CLOUDWATCH_METRIC",
              search       = "SEARCH('{AWS/EBS,VolumeId} MetricName=\"VolumeQueueLength\"', 'Maximum', 300)"
            }
          ]
        }
      },
      # 4. EFS Health Window
      {
        type   = "explorer",
        x      = 0,
        y      = 21,
        width  = 24,
        height = 7,
        properties = {
          title = "EFS File System Health (PercentIOLimit)",
          # Corrected metrics structure
          metrics = [
            {
              metricName   = "PercentIOLimit",
              resourceType = "CLOUDWATCH_METRIC",
              search       = "SEARCH('{AWS/EFS,FileSystemId} MetricName=\"PercentIOLimit\"', 'Maximum', 300)"
            }
          ]
        }
      },
      # 5. FSx Health Window
      {
        type   = "explorer",
        x      = 0,
        y      = 28,
        width  = 24,
        height = 7,
        properties = {
          title = "FSx File System Health (FreeStorageCapacity)",
          # Corrected metrics structure
          metrics = [
            {
              metricName   = "FreeStorageCapacity",
              resourceType = "CLOUDWATCH_METRIC",
              search       = "SEARCH('{AWS/FSx,FileSystemId} MetricName=\"FreeStorageCapacity\"', 'Minimum', 300)"
            }
          ]
        }
      }
    ]
  })
}
