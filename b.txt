# --- Lambda Metrics ---
locals {
  lambda_functions = var.lambda_function_names # pass a list of Lambda names via TF var

  lambda_metrics = [
    for fn in local.lambda_functions : [
      "AWS/Lambda", "Invocations", "FunctionName", fn, 
      { "label": "Invocations - ${fn}" }
    ]
  ]
  lambda_error_metrics = [
    for fn in local.lambda_functions : [
      "AWS/Lambda", "Errors", "FunctionName", fn,
      { "label": "Errors - ${fn}" }
    ]
  ]
  lambda_duration_metrics = [
    for fn in local.lambda_functions : [
      "AWS/Lambda", "Duration", "FunctionName", fn,
      { "label": "Duration - ${fn}" }
    ]
  ]

  all_lambda_metrics = concat(local.lambda_metrics, local.lambda_error_metrics, local.lambda_duration_metrics)
  lambda_metrics_string = jsonencode(local.all_lambda_metrics)

  final = <<-EOF
{
  "widgets" : [
    {
      "type"   : "metric",
      "x": 0,
      "y": 0,
      "width" :12,
      "height" : 6,
      "properties" :
      {
        "metrics" : ${local.metrics_string},
        "view": "gauge",
        "region" :  "${var.region}",
        "yAxis" : {
          "left" : {
            "min" : 2,
            "max" : 100
          }
        },
        "liveData": true,
        "period": 300,
        "title": "EC2-Health"
      }
    },
    {
      "type"   : "metric",
      "x": 0,
      "y": 7,
      "width" :12,
      "height" : 6,
      "properties" :
      {
        "metrics" : ${local.lambda_metrics_string},
        "view": "timeSeries",
        "region" :  "${var.region}",
        "period": 300,
        "title": "Lambda-Health"
      }
    }
  ]
}
EOF
}



resource "aws_cloudwatch_dashboard" "health" {
  dashboard_name = "EC2-Lambda-Health-dev"
  dashboard_body = local.final
}


variable "lambda_function_names" {
  description = "List of Lambda function names to monitor"
  type = list(string)
}


lambda_function_names = ["my-lambda-1","my-lambda-2"]
