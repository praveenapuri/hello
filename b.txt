# main.tf
terraform {
  backend "s3" {}
}

# Dynamically retrieve details of EC2 instances with a specific tag
data "aws_instances" "monitored_instances" {
  filter {
    name   = "instance-state-name"
    values = ["running", "pending"]
  }

  # It's best practice to filter by a tag to avoid monitoring all instances
  filter {
    name   = "tag:Monitoring"
    values = ["enabled"]
  }
}

# For each instance ID found, get its full details (including tags)
data "aws_instance" "instance_details" {
  for_each    = toset(data.aws_instances.monitored_instances.ids)
  instance_id = each.key
}

# Dynamically build a single list of widgets for all instances
locals {
  all_widgets = flatten([
    for index, instance in values(data.aws_instance.instance_details) : [
      # Widget 1: CPU Utilization Gauge
      {
        type   = "metric",
        x      = 0,
        y      = index * 4,
        width  = 6,
        height = 4,
        properties = {
          metrics = [["AWS/EC2", "CPUUtilization", "InstanceId", instance.id]],
          view    = "gauge",
          title   = "CPU - ${coalesce(instance.tags.Name, instance.id)}",
          region  = provider.aws.region,
          period  = 300,
          stat    = "Average",
          min     = 0,
          max     = 100
        }
      },
      # Widget 2: Memory Utilization Gauge
      {
        type   = "metric",
        x      = 6,
        y      = index * 4,
        width  = 6,
        height = 4,
        properties = {
          metrics = [["CWAgent", "mem_used_percent", "InstanceId", instance.id]],
          view    = "gauge",
          title   = "Memory - ${coalesce(instance.tags.Name, instance.id)}",
          region  = provider.aws.region,
          period  = 300,
          stat    = "Average",
          min     = 0,
          max     = 100
        }
      },
      # Widget 3: Disk Utilization Gauge
      {
        type   = "metric",
        x      = 12,
        y      = index * 4,
        width  = 6,
        height = 4,
        properties = {
          metrics = [[
            "CWAgent", "disk_used_percent",
            "InstanceId", instance.id,
            "device", "nvme0n1p1",
            "fstype", "xfs",
            "path", "/"
          ]],
          view    = "gauge",
          title   = "Disk - ${coalesce(instance.tags.Name, instance.id)}",
          region  = provider.aws.region,
          period  = 300,
          stat    = "Average",
          min     = 0,
          max     = 100
        }
      }
    ]
  ])
}

# Create a SINGLE CloudWatch Dashboard resource
resource "aws_cloudwatch_dashboard" "consolidated" {
  dashboard_name = "EPIC-Health1"

  dashboard_body = jsonencode({
    widgets = local.all_widgets
  })
}

# (Optional) Outputs
output "dashboard_name" {
  description = "The name of the consolidated CloudWatch dashboard."
  value       = aws_cloudwatch_dashboard.consolidated.dashboard_name
}

output "instances_found_for_dashboard" {
  description = "Map of instance IDs to their Name tags included in the dashboard."
  value       = { for inst in data.aws_instance.instance_details : inst.id => coalesce(inst.tags.Name, "N/A") }
}
