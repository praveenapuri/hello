# main.tf
terraform {
  backend "s3" {}
}

locals {
  # --- EC2 WIDGETS ---
  ec2_widgets = [
    # Title Widget for the EC2 Group
    {
      type   = "text",
      x      = 0,
      y      = 0,
      width  = 24,
      height = 1,
      properties = {
        markdown = "## EC2 Instance Health"
      }
    },
    # CPU Explorer
    {
      type   = "explorer",
      x      = 0,
      y      = 1,
      width  = 8,
      height = 7,
      properties = {
        title        = "CPU Utilization",
        search       = "SEARCH('{AWS/EC2,InstanceId} MetricName=\"CPUUtilization\" tag:Monitoring=enabled', 'Average', 300)",
        stat         = "Average",
        resourceType = "CLOUDWATCH_METRIC",
        metricName   = "CPUUtilization"
      }
    },
    # Memory Explorer
    {
      type   = "explorer",
      x      = 8,
      y      = 1,
      width  = 8,
      height = 7,
      properties = {
        title        = "Memory Utilization",
        search       = "SEARCH('{CWAgent,InstanceId} MetricName=\"mem_used_percent\" tag:Monitoring=enabled', 'Average', 300)",
        stat         = "Average",
        resourceType = "CLOUDWATCH_METRIC",
        metricName   = "mem_used_percent"
      }
    },
    # Disk Explorer
    {
      type   = "explorer",
      x      = 16,
      y      = 1,
      width  = 8,
      height = 7,
      properties = {
        title        = "Disk Utilization",
        search       = "SEARCH('{CWAgent,InstanceId,device,fstype,path} MetricName=\"disk_used_percent\" tag:Monitoring=enabled', 'Average', 300)",
        stat         = "Average",
        resourceType = "CLOUDWATCH_METRIC",
        metricName   = "disk_used_percent"
      }
    }
  ]

  # --- LAMBDA WIDGETS ---
  lambda_widgets = [
    # Title Widget for the Lambda Group
    {
      type   = "text",
      x      = 0,
      y      = 8, # Position this section below the EC2 widgets
      width  = 24,
      height = 1,
      properties = {
        markdown = "## Lambda Function Health"
      }
    },
    # Errors Explorer
    {
      type   = "explorer",
      x      = 0,
      y      = 9,
      width  = 8,
      height = 7,
      properties = {
        title        = "Errors",
        search       = "SEARCH('{AWS/Lambda,FunctionName} MetricName=\"Errors\"', 'Sum', 300)",
        stat         = "Sum",
        resourceType = "CLOUDWATCH_METRIC",
        metricName   = "Errors"
      }
    },
    # Throttles Explorer
    {
      type   = "explorer",
      x      = 8,
      y      = 9,
      width  = 8,
      height = 7,
      properties = {
        title        = "Throttles",
        search       = "SEARCH('{AWS/Lambda,FunctionName} MetricName=\"Throttles\"', 'Sum', 300)",
        stat         = "Sum",
        resourceType = "CLOUDWATCH_METRIC",
        metricName   = "Throttles"
      }
    },
    # Duration (P95) Explorer
    {
      type   = "explorer",
      x      = 16,
      y      = 9,
      width  = 8,
      height = 7,
      properties = {
        title        = "Duration (p95)",
        search       = "SEARCH('{AWS/Lambda,FunctionName} MetricName=\"Duration\"', 'p95', 300)",
        stat         = "p95",
        resourceType = "CLOUDWATCH_METRIC",
        metricName   = "Duration"
      }
    }
  ]
}

resource "aws_cloudwatch_dashboard" "consolidated_dashboard" {
  dashboard_name = "Consolidated-EC2-Lambda-Health"

  dashboard_body = jsonencode({
    # Combine the lists of EC2 and Lambda widgets
    widgets = concat(local.ec2_widgets, local.lambda_widgets)
  })
}
