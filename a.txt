@Library('epf@main') _
env.TERRAFORM_VERSION = '1.6.6'
env.TERRAGRUNT_VERSION = '0.54.7'

switch(env.BRANCH_NAME) {
  case "develop":
    env.ACCOUNT_NUMBER = "650835064350"
    env.ENV = "dev"
    break
  case "release":
    env.ACCOUNT_NUMBER = "140793889552"
    env.ENV = "test"
    break
  case "main":
    env.ACCOUNT_NUMBER = "547345051645"
    env.ENV = "prod"
    break
  default:
    env.ACCOUNT_NUMBER = "650835064350"
    env.ENV = "dev"
    break
}

env.AUTH_TYPE = 'gatekeeper'
env.REGION = "us-east-1"

echo "BRANCH_NAME = ${env.BRANCH_NAME}"
echo "ENV = ${env.ENV}"

String DeployerRole = "Enterprise/EPPDEPLOYER"
String targetAccount = "${ACCOUNT_NUMBER}"
String cloudServiceAccountName = "jenkins-robot-${ENV.toLowerCase()}"
env.TERRAGRUNT_IAM_ROLE = "arn:aws:iam::${ACCOUNT_NUMBER}:role/${DeployerRole}"

//String containerImage  = "registry.cigna.com/enterprise-devops/aws-d-megatainer"
//String containerVersion = "1.0.14-2"
String containerImage  = 'registry.cigna.com/enterprise-devops/aws-d-cloudkit'
String containerVersion = 'plz-2'
Integer containerCpu = 2000
Integer containerMemory = 19000

// other variables for pipeline
String sdlcEnvName = "${ENV.toUpperCase()}";

String cloudNameOS = "epic-payer-platform-openshift-devops1"
String cloudNameEKS = "epic-payer-platform-eks-jenkins-cluster-prod"

 List<String> modules = []

 env.MODULES_LIST = modules.toString().replace("[", "").replace("]", "")

// Pipeline
cignaBuildFlow {
    cloudName = "${cloudNameEKS}"
    githubConnectionName = "cigna-github"
    additionalProperties = [
            parameters([
                    choice(name: 'MODULE_TYPE', description: 'Choose the type of resource',
                            choices: [
                                    'aws',
                                    'test'
                            ]),
                    choice(name: 'MODULE_NAME', description: 'Choose the module name',
                            choices: [
                                    '---',
                                    'epic-payer-vpc',
                                    'epic-payer-vpc-secondary',
                                    'epic-payer-lambda-layer',
                                    'epic-payer-resources',
                                    'epic-payer-s3-efs-filetransfer',
                                    'epic-payer-s3-fsx-filetransfer',
                                    'epic-payer-fsx-efs-dynamicmemberload',
                                    'epic-payer-fsx-efs-filetransfer',
                                    'epic-payer-certs',
                                    'epic-payer-efs',
                                    'epic-payer-vpc-dr',
                                    'epic-payer-resources-dr',
                                    'test'
                            ]),
                    choice(name: 'PLZ_ALIAS', description: 'The Terraform action to take',
                           choices: ['---', 'plan', 'deploy'], defaultValue: '---'),
                    string(name: 'TF_TARGET', description: 'Terraform target', defaultValue: '', trim: true)
            ]),

    ]
    phases = [
        [
            deploymentType  : 'plz',
            alias           :  '${PLZ_ALIAS}',
            extraArgs       : 'job',
            sdlcEnvironment : "Deploy AWS resources to ${sdlcEnvName}",
            runInAWS: true,
            cloudName: "${cloudNameEKS}",
            aws:
            [
                cloudServiceAccountName: "${cloudServiceAccountName}",
                targetAccount: "${targetAccount}",
                accountRoleName: "${DeployerRole}"
            ],
            branchPattern   : ".*",
            container: [
                image  : "${containerImage}",
                version: "${containerVersion}"
            ],
            verbosityFlag   : '-vvv',
            isProductionDeployment: false,
            withEnv: [
                'PATH=/home/jenkins/.nvm/versions/node/v16.15.0/bin:/home/jenkins/.cargo/bin:/home/jenkins/go/bin:/home/jenkins/.bin:/home/jenkins/.please:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/bin:/var/lang/bin',
                'ENV=dev'
            ]
        ]

      ]
}
