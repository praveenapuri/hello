resource "aws_ssm_document" "multi_purpose_manager" {
  name            = "Multi-Purpose-EC2-Manager"
  document_type   = "Command"
  document_format = "JSON"

  content = jsonencode({
    schemaVersion = "2.2"
    description   = "Performs one of two actions: lists all EC2 instances OR starts/stops a specific instance."
    parameters = {
      "ExecutionMode" = {
        type          = "String"
        description   = "(Required) The mode of operation."
        allowedValues = ["ListInstances", "ManageInstance"]
      },
      "InstanceId" = {
        type        = "String"
        description = "(Optional) The ID of the EC2 instance to target. Required only for 'ManageInstance' mode."
        default     = "none"
      },
      "Action" = {
        type          = "String"
        description   = "(Optional) The action to perform. Required only for 'ManageInstance' mode."
        allowedValues = ["Start", "Stop", "none"]
        default       = "none"
      }
    }
    mainSteps = [
      {
        action = "aws:runShellScript"
        name   = "executeTask"
        inputs = {
          runCommand = [
            "#!/bin/bash",
            "set -e",
            "",
            "REGION=$(curl -s http://169.254.169.254/latest/meta-data/placement/region)",
            "",
            "# --- Execution Mode: List Instances ---",
            "if [ \"{{ExecutionMode}}\" == \"ListInstances\" ]; then",
            "  echo \"--- Fetching all instances in region: $REGION ---\"",
            "  aws ec2 describe-instances --region $REGION  --query "Reservations[*].Instances[*].{Name:Tags[?Key=='Name']|[0].Value, ID:InstanceId, State:State.Name, Type:InstanceType}" --output table",
            "",
            "# --- Execution Mode: Manage a Specific Instance ---",
            "elif [ \"{{ExecutionMode}}\" == \"ManageInstance\" ]; then",
            "  if [ \"{{InstanceId}}\" == \"none\" ] || [ \"{{Action}}\" == \"none\" ]; then",
            "    echo \"Error: InstanceId and Action parameters are required for ManageInstance mode.\" >&2",
            "    exit 1",
            "  fi",
            "  echo \"Executing action [{{Action}}] on instance [{{InstanceId}}] in region [$REGION]\"",
            "  aws ec2 {{Action | downcase}}-instances --region $REGION --instance-ids \"{{InstanceId}}\"",
            "  echo \"Command sent successfully.\"",
            "fi"
          ]
        }
      }
    ]
  })
}


#!/bin/bash

# Fetch instance details (Name, ID, Type)
instances=$(aws ec2 describe-instances \
  --query "Reservations[*].Instances[*].[Tags[?Key=='Name']|[0].Value, InstanceId, InstanceType]" \
  --output text)

# Fetch instance health status (System and Instance)
statuses=$(aws ec2 describe-instance-status \
  --query "InstanceStatuses[*].[InstanceId, SystemStatus.Status, InstanceStatus.Status]" \
  --output text)

# Print the header
printf "%-25s %-22s %-15s %-15s %-15s\n" "NAME" "ID" "TYPE" "SYSTEM_STATUS" "INSTANCE_STATUS"
printf -- '-%.0s' {1..95}; echo ""

# Join the two results by instance ID and print the formatted table
join <(sort <<<"$instances") <(sort <<<"$statuses") | awk '{printf "%-25s %-22s %-15s %-15s %-15s\n", $2, $1, $3, $4, $5}'
