runCommand = [
        "#!/bin/bash",
        "set -e",
        "",
        "REGION=$$(curl -s http://169.254.169.254/latest/meta-data/placement/region)",
        "",
        "# Create a temporary file for exclusions",
        "EXCLUSION_FILE=$(mktemp)",
        "echo \"{{ExcludeInstanceIds}}\" | tr ',' '\\n' > $$EXCLUSION_FILE",
        "",
        "if [[ \"{{ExecutionMode}}\" == \"ListAll\" ]]; then",
        "  aws ec2 describe-instances --region $$REGION --query 'Reservations[*].Instances[*].{ID:InstanceId,State:State.Name,Name:Tags[?Key==`Name`].Value|[0]}' --output text",
        "elif [[ \"{{ExecutionMode}}\" == \"StopAllRunning\" ]] || [[ \"{{ExecutionMode}}\" == \"StartAllStopped\" ]]; then",
        "  state_filter='running'",
        "  if [[ \"{{ExecutionMode}}\" == \"StartAllStopped\" ]]; then state_filter='stopped'; fi",
        "",
        "  echo \"Finding all $$state_filter instances...\"",
        "  all_ids=$$(aws ec2 describe-instances --region $$REGION --filters \"Name=instance-state-name,Values=$$state_filter\" --query 'Reservations[*].Instances[*].InstanceId' --output text)",
        "",
        "  # Use the temporary file with grep to filter out excluded IDs",
        "  final_ids=$$(echo \"$$all_ids\" | tr ' ' '\\n' | grep -v -w -F -f $$EXCLUSION_FILE || true)",
        "",
        "  if [[ -n \"$$final_ids\" ]]; then",
        "    action_verb=$$(echo \"{{ExecutionMode}}\" | sed -e 's/All.*//')",
        "    echo \"$${action_verb}ing instances: $$final_ids\"",
        "    cli_action=$$(echo \"$$action_verb\" | tr '[:upper:]' '[:lower:]')",
        "    aws ec2 \"$$cli_action\"-instances --region $$REGION --instance-ids $$final_ids",
        "  else",
        "    echo \"No instances found to act on after exclusions.\"",
        "  fi",
        "fi",
        "",
        "# Clean up the temporary file",
        "rm -f $$EXCLUSION_FILE"
      ]
