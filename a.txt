# 1. IAM Role with necessary permissions for the EC2 instance
resource "aws_iam_role" "ssm_ec2_manager_role" {
  name = "SSM-EC2-Manager-Role"

  # Allows an EC2 instance to assume this role
  assume_role_policy = jsonencode({
    Version = "2012-10-17",
    Statement = [
      {
        Action    = "sts:AssumeRole",
        Effect    = "Allow",
        Principal = {
          Service = "ec2.amazonaws.com"
        }
      }
    ]
  })
}

# 2. IAM Policy attached to the role
resource "aws_iam_role_policy" "ssm_ec2_manager_policy" {
  name = "SSM-EC2-Manager-Policy"
  role = aws_iam_role.ssm_ec2_manager_role.id

  policy = jsonencode({
    Version = "2012-10-17",
    Statement = [
      {
        Effect   = "Allow",
        Action   = [
          "ec2:DescribeInstances",
          "ec2:StartInstances",
          "ec2:StopInstances"
        ],
        Resource = "*"
      }
    ]
  })
}

# 3. The SSM Document
resource "aws_ssm_document" "instance_manager" {
  name            = "Manage-EC2-Instances-With-Context"
  document_type   = "Command"
  document_format = "JSON"

  content = jsonencode({
    schemaVersion = "2.2"
    description   = "Lists all EC2 instances and then starts/stops a specific one."
    parameters = {
      "InstanceId" = {
        type        = "String"
        description = "(Required) The ID of the EC2 instance to start or stop."
      },
      "Action" = {
        type          = "String"
        description   = "(Required) The action to perform."
        allowedValues = ["Start", "Stop"]
      }
    }
    mainSteps = [
      {
        action = "aws:runShellScript"
        name   = "listAndAct"
        inputs = {
          runCommand = [
            "#!/bin/bash",
            "set -e",
            "",
            "REGION=$(curl -s http://169.254.169.254/latest/meta-data/placement/region)",
            "echo \"--- Fetching all instances in region: $REGION ---\"",
            "aws ec2 describe-instances --region $REGION --query 'Reservations[*].Instances[*].{ID:InstanceId,State:State.Name,Name:Tags[?Key==`Name`].Value|[0]}' --output table",
            "echo \"----------------------------------------------------\"",
            "",
            "echo \"Executing action [{{Action}}] on instance [{{InstanceId}}]\"",
            "",
            "if [ \"{{Action}}\" == \"Stop\" ]; then",
            "  aws ec2 stop-instances --region $REGION --instance-ids \"{{InstanceId}}\"",
            "elif [ \"{{Action}}\" == \"Start\" ]; then",
            "  aws ec2 start-instances --region $REGION --instance-ids \"{{InstanceId}}\"",
            "fi",
            "",
            "echo \"Command sent successfully.\""
          ]
        }
      }
    ]
  })
}
