# main.tf
terraform {
  backend "s3" {}
}

# Dynamically retrieve details of EC2 instances with a specific tag
data "aws_instances" "monitored_instances" {
  filter {
    name   = "instance-state-name"
    values = ["running", "pending"]
  }
}

# For each instance ID found, get its full details (including tags)
data "aws_instance" "instance_details" {
  for_each   = toset(data.aws_instances.monitored_instances.ids)
  instance_id = each.key
}

# Dynamically build a single list of widgets for all instances
locals {
  # Use flatten to create one big list of widgets from our loops
  ec2_widgets = flatten([
    # CORRECTED LOOP: Loop over a list of instances to get a numeric index
    for index, instance in values(data.aws_instance.instance_details) : [
      # Widget 1: CPU Utilization Gauge
      {
        type   = "metric",
        x      = 0,
        y      = index * 4, # 'index' is now a number (0, 1, 2...)
        width  = 8,
        height = 6,
        properties = {
          metrics = [["AWS/EC2", "CPUUtilization", "InstanceId", instance.id]],
          view    = "gauge",
          title   = "CPU - ${coalesce(instance.tags.Name, instance.id)}",
          region  = var.region,
          period  = 300,
          stat    = "Average",

          # Gauge and Axis Configuration
          min                   = 0
          max                   = 100
          liveData              = true
          stacked               = false
          setPeriodToTimeRange  = false
          yAxis = {
            left = {
              min = 0
              max = 100
            }
            right = {
              min       = 0
              max       = 100
              showUnits = true
            }
          }
          # Annotation (Threshold Line)
          annotations = {
            horizontal = [
              {
                color = "#d62728"
                label = "Threshold 80%"
                value = 80
                fill  = "above"
              }
            ]
          }
        }
      },
      # Widget 2: Memory Utilization Gauge
      {
        type   = "metric",
        x      = 8,
        y      = index * 4, # 'index' is now a number (0, 1, 2...)
        width  = 8,
        height = 6,
        properties = {
          metrics = [["CWAgent", "mem_used_percent", "InstanceId", instance.id]],
          view    = "gauge",
          title   = "Memory - ${coalesce(instance.tags.Name, instance.id)}",
          region  = var.region,
          period  = 300,
          stat    = "Average",
          # Gauge and Axis Configuration
          min                   = 0
          max                   = 100
          liveData              = true
          stacked               = false
          setPeriodToTimeRange  = false
          yAxis = {
            left = {
              min = 0
              max = 100
            }
            right = {
              min       = 0
              max       = 100
              showUnits = true
            }
          }
          # Annotation (Threshold Line)
          annotations = {
            horizontal = [
              {
                color = "#d62728"
                label = "Threshold 80%"
                value = 80
                fill  = "above"
              }
            ]
          }
        }
      },
      # Widget 3: Disk Utilization Gauge
      {
        type   = "metric",
        x      = 16,
        y      = index * 4, # 'index' is now a number (0, 1, 2...)
        width  = 8,
        height = 6,
        properties = {
          metrics = [[
            "CWAgent", "disk_used_percent",
            "InstanceId", instance.id,
            "device", "nvme0n1p1",
            "fstype", "xfs",
            "path", "/"
          ]],
          view    = "gauge",
          title   = "Disk - ${coalesce(instance.tags.Name, instance.id)}",
          region  = var.region,
          period  = 300,
          stat    = "Average",
          # Gauge and Axis Configuration
          min                   = 0
          max                   = 100
          liveData              = true
          stacked               = false
          setPeriodToTimeRange  = false
          yAxis = {
            left = {
              min = 0
              max = 100
            }
            right = {
              min       = 0
              max       = 100
              showUnits = true
            }
          }
          # Annotation (Threshold Line)
          annotations = {
            horizontal = [
              {
                color = "#d62728"
                label = "Threshold 80%"
                value = 80
                fill  = "above"
              }
            ]
          }
        }
      }
    ]
  ])
}

# Create a SINGLE CloudWatch Dashboard resource
resource "aws_cloudwatch_dashboard" "ec2" {
  dashboard_name = "EC2-Health"

  dashboard_body = jsonencode({
    widgets = local.ec2_widgets
  })
}

