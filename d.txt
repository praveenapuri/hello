\resource "aws_ssm_document" "linux_unified_manager" {
  name            = "Unified-Linux-EC2-Manager"
  document_type   = "Command"
  document_format = "JSON"

  content = jsonencode({
    schemaVersion = "2.2"
    description   = "Linux: Lists all instances, starts all stopped instances, or stops all running instances."
    parameters = {
      "ExecutionMode" = {
        type          = "String"
        description   = "(Required) The action to perform."
        allowedValues = ["ListAll", "StartAllStopped", "StopAllRunning"]
      }
    }
    mainSteps = [
      {
        action = "aws:runShellScript"
        name   = "executeUnifiedTask"
        inputs = {
          runCommand = [
            "#!/bin/bash",
            "set -e",
            "",
            TOKEN=$(curl -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 21600")
            REGION=$(curl -H "X-aws-ec2-metadata-token: $TOKEN" -v "http://169.254.169.254/latest/meta-data/placement/region")
            "",
            "# --- Mode: List All Instances ---",
            "if [ \"{{ExecutionMode}}\" == \"ListAll\" ]; then",
            "  echo \"--- Fetching all instances in region: $REGION ---\"",
            "  aws ec2 describe-instances --region $REGION --query 'Reservations[*].Instances[*].{ID:InstanceId,State:State.Name,Name:Tags[?Key==`Name`].Value|[0]}' --output table",
            "",
            "# --- Mode: Stop All Running Instances ---",
            "elif [ \"{{ExecutionMode}}\" == \"StopAllRunning\" ]; then",
            "  echo \"Finding all running instances to stop...\"",
            "  instance_ids=$(aws ec2 describe-instances --region $REGION --filters \"Name=instance-state-name,Values=running\" --query 'Reservations[*].Instances[*].InstanceId' --output text)",
            "  if [ -n \"$instance_ids\" ]; then",
            "    echo \"Stopping instances: $instance_ids\"",
            "    aws ec2 stop-instances --region $REGION --instance-ids $instance_ids",
            "  else",
            "    echo \"No running instances found.\"",
            "  fi",
            "",
            "# --- Mode: Start All Stopped Instances ---",
            "elif [ \"{{ExecutionMode}}\" == \"StartAllStopped\" ]; then",
            "  echo \"Finding all stopped instances to start...\"",
            "  instance_ids=$(aws ec2 describe-instances --region $REGION --filters \"Name=instance-state-name,Values=stopped\" --query 'Reservations[*].Instances[*].InstanceId' --output text)",
            "  if [ -n \"$instance_ids\" ]; then",
            "    echo \"Starting instances: $instance_ids\"",
            "    aws ec2 start-instances --region $REGION --instance-ids $instance_ids",
            "  else",
            "    echo \"No stopped instances found.\"",
            "  fi",
            "fi"
          ]
        }
      }
    ]
  })
}
