# modules/dashboards/ec2.tf

resource "aws_cloudwatch_dashboard" "ec2" {
  # Create a dashboard for each item in the var.ec2_dashboards map
  for_each = var.ec2_dashboards

  dashboard_name = "EC2-Health-${each.key}" # 'each.key' is the name you provide, e.g., "web-server"

  dashboard_body = jsonencode({
    widgets = [
      # CPU Utilization Widget
      {
        type   = "metric",
        x      = 0, y = 0, width = 8, height = 6,
        properties = {
          metrics     = [["AWS/EC2", "CPUUtilization", "InstanceId", each.value.instance_id]],
          period      = 300,
          stat        = "Average",
          region      = var.aws_region,
          title       = "EC2 CPU Utilization (%)",
          yAxis       = { left = { min = 0, max = 100 } },
          annotations = { horizontal = [{ color = "#ff0000", label = "Threshold 80%", value = 80 }] }
        }
      },
      # Memory Utilization Widget
      {
        type   = "metric",
        x      = 8, y = 0, width = 8, height = 6,
        properties = {
          metrics     = [["CWAgent", "mem_used_percent", "InstanceId", each.value.instance_id]],
          period      = 300,
          stat        = "Average",
          region      = var.aws_region,
          title       = "Memory Utilization (%)",
          yAxis       = { left = { min = 0, max = 100 } },
          annotations = { horizontal = [{ color = "#ff0000", label = "Threshold 80%", value = 80 }] }
        }
      },
      # Disk Utilization Widget
      {
        type   = "metric",
        x      = 16, y = 0, width = 8, height = 6,
        properties = {
          metrics = [[
            "CWAgent", "disk_used_percent",
            "InstanceId", each.value.instance_id,
            "device", each.value.disk_device,
            "fstype", each.value.file_system_type,
            "path", each.value.disk_path
          ]],
          period      = 300,
          stat        = "Average",
          region      = var.aws_region,
          title       = "Disk Utilization (%) on ${each.value.disk_path}",
          yAxis       = { left = { min = 0, max = 100 } },
          annotations = { horizontal = [{ color = "#ff0000", label = "Threshold 80%", value = 80 }] }
        }
      }
    ]
  })
}
